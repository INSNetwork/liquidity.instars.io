---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-svc
  namespace: ${KUBE_ENV}-env
  labels:
    monitoring: "true"
spec:
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: ${APP_NAME}-deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}-deployment
  namespace: ${KUBE_ENV}-env
  labels:
    app.kubernetes.io/name: ${APP_NAME}-deployment
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app.kubernetes.io/name: ${APP_NAME}-deployment
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${APP_NAME}-deployment
    spec:
      hostAliases:
        - ip: '${ULTRA_IP}'
          hostnames:
            - '${BACKEND_URL}'
      containers:
        - name: ${APP_NAME}
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          image: ${KUBE_APP_IMAGE}
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ${APP_NAME}-deployment
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        role: application
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ${APP_NAME}-ing
  namespace: ${KUBE_ENV}-env
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-dns
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  rules:
    - host: ${FRONTEND_URL}
      http:
        paths:
          - path: /
            backend:
              serviceName: ${APP_NAME}-svc
              servicePort: http
    - host: www.${FRONTEND_URL}
      http:
        paths:
          - path: /
            backend:
              serviceName: ${APP_NAME}-svc
              servicePort: http
  tls:
    - hosts:
      - ${FRONTEND_URL}
      - www.${FRONTEND_URL}
      secretName: ${KUBE_ENV}-front-ultra-io-website-cert
